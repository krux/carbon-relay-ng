// Code generated by go-bindata.
// sources:
// admin_http_assets/app.css
// admin_http_assets/app.js
// admin_http_assets/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _admin_http_assetsAppCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8a\xce\x4b\x8f\xb1\x4a\xce\xc9\x4f\xcc\x8e\xd5\x51\x00\x72\x74\xe1\xec\x94\xc4\x92\x44\x5d\x64\x81\x0a\x64\x9e\x1e\x8c\x0d\x64\x22\x24\x20\xe2\x19\x99\x29\xa9\x0a\xd5\x5c\x0a\x40\x90\x92\x59\x5c\x90\x93\x58\x69\xa5\x90\x97\x9f\x97\xaa\xa0\x98\x99\x5b\x90\x5f\x54\x92\x98\x57\x62\xcd\x55\x0b\x08\x00\x00\xff\xff\x9c\x9e\x21\xb0\x7a\x00\x00\x00")

func admin_http_assetsAppCssBytes() ([]byte, error) {
	return bindataRead(
		_admin_http_assetsAppCss,
		"admin_http_assets/app.css",
	)
}

func admin_http_assetsAppCss() (*asset, error) {
	bytes, err := admin_http_assetsAppCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_http_assets/app.css", size: 122, mode: os.FileMode(420), modTime: time.Unix(1418065129, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admin_http_assetsAppJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x4d\x6f\xe3\x36\x13\xbe\xfb\x57\x10\x82\x01\x51\x88\x22\xe7\x7d\x0f\x05\x2a\x23\xd8\xa6\x1f\x8b\xee\x21\x40\xb1\xdd\xb6\x07\xd7\x0b\xd0\x12\xa3\x08\xa1\x49\x81\xa4\xbc\x31\xbc\xfa\xef\x1d\x52\x5f\x14\xe5\xcd\xa6\x49\x7b\xab\x01\x43\x12\x39\x1f\xcf\x3c\x33\x1c\x8d\x0e\x44\x22\x52\x55\xe8\x1a\x71\xfa\x09\x11\x5e\xd4\x8c\xc8\x64\x2f\xf2\x9a\x51\x1c\x64\x44\xee\x04\xbf\x94\x94\x91\xe3\x25\x2f\x82\x18\x6d\x02\x5e\xbc\xa7\x4a\xd4\x32\xa3\xf0\x18\xd4\x65\xb2\x13\x42\x2b\x2d\x49\x15\x6c\xa3\xf5\x62\x01\xd6\x92\x4c\x70\x2d\x05\x63\x54\xe2\xe0\x96\x94\xfc\x07\xcd\xac\xee\x52\x65\xa2\xb2\x7a\x4b\xe9\x18\x59\x82\x3f\x62\x24\xee\x6a\x9e\xe9\x52\x70\xdc\x0a\xc6\x68\x10\x83\x5b\x2b\x14\x9d\x16\x08\xb5\xbb\x09\x01\xfb\x5a\x01\xf4\xcd\x76\x0d\xab\x26\x94\x0f\x64\xc7\x28\xac\x0c\x7a\x38\x58\x69\xb3\xb6\x0a\xa2\x5e\xe6\x7b\x46\xb2\x07\x56\x2a\xed\xc9\xed\xfa\x75\xb5\x4a\x4b\x9e\xd3\xc7\x51\xe5\xa6\x28\x24\x2d\x88\x16\xd2\xd3\x21\xc3\xc6\x5c\xe9\xbd\xa8\xb5\x8f\x45\x9a\x35\x10\x7d\xa0\x47\x08\xf7\x04\x97\x14\x85\xdf\xc1\x25\x6c\xe0\xb1\x19\x74\x7f\xa4\x4a\x97\x9c\x18\x2e\xbe\x6c\x61\x95\x8f\x52\xae\xfb\xc5\x48\xd1\x81\xb0\x32\xbf\xc9\x73\x30\x60\x88\x5a\x7d\xdc\x7c\x4c\xb7\x17\x7f\xa6\x9b\xab\xcb\x6f\xb7\x17\x38\xb5\x8f\xd1\x9b\xe5\x6a\xed\xe9\x58\xf0\x1f\x8e\x15\xb5\x5a\x58\x51\x9e\xe3\x1b\xc6\x3e\xbf\x2d\xa5\xd2\xd1\x2d\xd1\xd9\x7d\xf4\x19\x43\x9e\x15\x10\x46\xb9\xfe\x99\xa8\xfb\x92\x17\xd1\xca\xb7\x43\x0b\xfa\x08\x36\xf0\x90\xda\x08\x99\x14\x9a\x9f\xa4\xba\x96\x7c\x78\x34\x3f\x08\x4d\xa7\x63\x19\x80\x89\x9a\x46\x13\x09\xf3\x33\x0c\x95\xea\x77\x63\x1f\x4c\x6b\x59\xd3\xb5\x27\xa1\xe5\x71\xa6\x85\x6c\x89\x03\xa0\x9f\x1e\xab\xce\xb2\xaf\xd6\xa0\xcc\x44\x86\xcf\xf8\x44\x8e\xc7\x3b\xc2\xd4\xcc\x65\xe3\x3d\x77\xd1\x75\x5a\xae\x74\x2f\xd9\x98\xc5\x26\xc2\x26\x65\x5e\xc6\x8a\xe2\x2d\x70\xf0\x4f\xf3\x56\xde\xa1\x76\x0b\x5d\x5f\xa3\x40\xd5\xfb\xe0\x5c\x9c\x83\x83\x73\xc4\xfa\x51\x4e\x4d\x92\x43\xf1\x7a\x93\x9d\xe8\x8c\xe4\x27\x69\xeb\xce\xf3\xc0\x40\x99\x3f\x46\x2d\x0e\xdb\x12\x92\x82\xea\x91\xca\x9c\x68\x12\xf5\x28\x3b\x03\xba\xeb\x1c\x66\xaf\xf5\xda\x9e\xc6\xc6\xf7\x32\xf5\x0b\x25\x05\xc9\xea\xda\xe7\xd8\x26\xf0\xc9\x9c\x9d\x14\x18\x29\x4c\xd7\x7c\xc7\x35\x95\x40\x53\xfa\xcd\x55\x8c\xfe\x20\x25\xe4\xea\x7f\xff\xbf\x6a\x1d\xf4\xcd\x2c\xcf\x27\x5d\x66\x96\xf7\xf3\x4d\xcf\x03\x92\x2c\x15\x39\x50\x1c\x25\xfa\x9e\xf2\x31\x60\x38\xfe\xd5\x98\x17\x47\x23\xcf\x5f\x03\xdd\x31\xd6\x33\x63\x89\x8b\x07\xc7\x54\xca\x99\xdf\x31\x82\xd3\x5e\x15\x29\x02\x99\xc4\xb0\x9e\xc0\x8d\x90\xcd\xd6\x63\x7f\xd0\x93\x74\x2f\x0e\xf4\x3c\x49\x63\xba\x4d\x41\x42\x5b\xba\x2b\xe5\x1e\x87\x37\x92\xa2\xa3\xa8\x91\xaa\xbb\x9b\x4f\x84\x6b\xa4\x05\xca\x29\xa3\xd0\x9c\xc7\xf6\x8d\xa0\x87\x41\xcf\xe0\x22\x41\x21\xba\x40\xc6\xde\x08\x7c\xf4\x99\xb4\x8a\xf8\x14\xda\x6e\x1b\xa6\x20\xf8\x34\x17\x7e\x09\x01\xd9\xfd\x8b\xc1\xb6\x23\x73\x8f\x4f\xbf\x94\xf0\xea\x01\xd2\x6d\xd1\xc7\xe8\xd7\x4a\x08\x96\xda\xd3\x12\x23\x6f\xaf\xcb\x8e\xe9\xc8\xd0\x90\x6d\x27\x0e\xfc\x4a\xea\x3d\xbc\xa0\x88\xac\xea\xdf\x2c\xa3\x7f\x2b\xa0\xff\xea\xeb\xb9\xf5\x35\xec\x99\xbc\xb9\xc0\xed\xb8\xf0\xb5\xec\xb7\x39\xb7\x29\x3f\xc1\x1c\x62\x75\xe2\x49\xf1\x4c\x3d\x43\x06\x5a\x44\x5e\x1e\x9e\x9d\x81\x73\xbd\xb5\xa5\xdf\x1d\xce\x5e\xcb\xfe\x30\xd0\x3d\x49\xfe\xe0\xf1\xf5\x67\xbb\x0d\x61\x76\xf8\x60\x54\xfb\x1a\xfc\x37\xa1\x83\xa8\x4d\xc7\x80\xc6\x4c\x87\x66\xdc\x7b\x09\x96\xe9\x1c\xe9\x22\x8a\xd1\x33\x58\x9d\xc0\x72\x87\xd2\x39\xba\x18\xbd\x98\x36\xf8\x73\x9f\x34\x64\x93\xde\xf9\x36\xf3\x9e\x9d\xfe\xdf\x71\xa5\x09\xcf\xec\x54\x6d\x17\xac\x2e\xee\x11\x6a\xba\xaf\x18\xd1\xf4\x37\x09\xbd\x26\xac\x2b\xa8\xb9\x36\x1b\xb7\x56\xf6\x5e\xef\x59\xd8\x55\x2e\x02\xc8\x3b\x41\x64\xde\xb7\xa1\x6e\x79\xfc\x72\x49\x1d\x2c\xc3\xe7\xc8\x04\x45\x77\x52\xdc\x81\xa7\x27\xbf\x8b\xc6\x5e\xd7\xfe\xae\x78\x98\x04\x3a\x1d\x98\xa6\x2e\x92\x8c\x09\x45\xb1\x6b\xd6\x19\x5a\x9b\x99\xe9\xcc\x28\xb1\xe7\x9b\xcf\x4b\xb5\x2f\x95\xc2\x61\xab\x18\x9e\x33\xde\x1f\x76\x64\x5d\xa4\x9d\xab\x78\x18\x46\x95\x60\x07\x58\x1e\xbd\x58\x98\xe9\x17\x21\x74\xf3\x5d\xff\xad\x09\xc6\x8e\x93\x00\xd5\x06\x52\xbf\x75\x91\x2c\xdc\x6b\xd3\xce\x5f\x68\x5a\x11\x50\xef\xaa\x66\x7a\xfa\xc2\x42\xd8\x4b\x90\xd3\x24\xb1\x4b\xe6\xd8\x8e\x1a\xe3\xf8\xaf\x00\x00\x00\xff\xff\x5f\xd1\x4e\x78\x15\x0f\x00\x00")

func admin_http_assetsAppJsBytes() ([]byte, error) {
	return bindataRead(
		_admin_http_assetsAppJs,
		"admin_http_assets/app.js",
	)
}

func admin_http_assetsAppJs() (*asset, error) {
	bytes, err := admin_http_assetsAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_http_assets/app.js", size: 3861, mode: os.FileMode(420), modTime: time.Unix(1440605540, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admin_http_assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x1b\xed\x6e\xdc\x36\xf2\x7f\x9e\x82\x11\x0a\x38\xc1\x45\x92\xed\xa4\x68\x6b\xec\x1a\x48\xdc\xe4\x92\xbb\xe6\x62\x38\x29\xee\x0e\x41\x0e\xe0\x8a\xdc\x15\x6d\x4a\x54\x48\x6a\x6d\x5f\x90\x77\xbf\x19\x4a\x5a\x69\xb5\x92\x56\x5b\x7f\xf5\xda\x34\x16\xc9\xe1\x70\xbe\x67\x38\x66\x27\x8f\x7f\xfd\x70\xf2\xe9\xdf\xa7\xaf\x49\x6c\x13\x79\xfc\x68\x82\x3f\x88\xa4\xe9\x62\xea\xf1\xd4\x23\xe9\xc2\xa7\x59\x36\xf5\x22\xaa\x67\x2a\xf5\x35\x97\xf4\xda\x4f\x17\x1e\x42\x72\xca\x8e\x1f\x11\x32\x49\xb8\xa5\x24\x8a\xa9\x36\xdc\x4e\xbd\xdc\xce\xfd\x9f\xbd\x7a\x21\xb6\x36\xf3\xf9\xd7\x5c\x2c\xa7\xde\xbf\xfc\xdf\x5f\xfa\x27\x2a\xc9\xa8\x15\x33\xc9\x3d\x12\xa9\xd4\xf2\x14\x76\xbd\x7b\x3d\xe5\x6c\xc1\x1b\xfb\x52\x9a\xf0\xa9\xb7\x14\xfc\x32\x53\xda\x36\x40\x2f\x05\xb3\xf1\x94\xf1\xa5\x88\xb8\xef\x06\xcf\x88\x48\x85\x15\x54\xfa\x26\xa2\x92\x4f\x0f\x36\xd0\x30\x6e\x22\x2d\x32\x2b\x54\xda\xc0\xb4\x01\x46\x73\x1b\x2b\xbd\x01\x21\x45\x7a\x41\x80\xf5\xa9\x27\x22\x44\x10\x6b\x3e\x9f\x7a\x41\x10\xc2\x9f\x39\x5d\xe2\x64\x00\x7f\x01\x30\x42\x5b\x61\x25\x3f\x3e\x29\x04\x76\xe6\x04\xf6\x8f\xbf\x12\xca\x12\x91\x4e\xc2\x62\xd1\xc1\x3d\xf6\x7d\xf2\x1b\xb5\xdc\x58\x38\x2f\xc9\x84\xe4\x8c\xd0\x94\x11\x80\x13\x73\x01\x83\x93\x8f\x1f\x89\xef\xb7\x28\x30\xf6\x5a\x72\x13\x73\x6e\x2b\x3a\xc2\x30\xa1\x57\x11\x4b\x83\x99\x52\xd6\x58\x4d\x33\x1c\x00\xca\x70\x35\x11\x3e\x0f\x0e\x83\xfd\x30\x32\xa6\x9e\x0b\xe0\x9c\x00\x66\xbc\x9a\x9a\x0f\x4e\x40\x54\x12\x1b\xf3\x84\xdf\xe1\xd9\xbe\x3b\xa0\x45\xc1\xe0\x39\x60\x84\x2d\x62\xdf\x7e\x7a\xff\xdb\x8f\xc4\xc4\x22\x71\x52\x3b\xe3\x26\x53\x29\x0b\xce\x0d\x79\xf7\xfa\x67\x62\xf2\x0c\xcd\x86\xa8\x79\x09\xc8\x25\x9c\x98\x5a\x53\x88\x98\x33\x41\xc9\xd7\x9c\x6b\xc1\x4d\xc5\x27\x20\xfd\x2c\xe6\x44\x5a\x40\x40\x7e\xf9\xe2\xe6\x0a\xab\x21\x46\x47\x53\x0f\x0d\xd9\x1c\x85\xa1\x32\x26\x28\xb9\x46\x46\xd1\x61\x7e\x04\x32\x96\xc0\xe8\x4f\xc1\x61\x3d\x76\xec\x9d\x03\xc9\x93\xb0\x40\x33\x16\xa3\x2e\x58\x09\x0f\x82\x17\x80\xaf\x1c\x75\x63\x7b\xfc\x99\xa7\x4c\xcc\xbf\x20\x0b\x93\xb0\xf0\xc8\x47\x93\x99\x62\xd7\x44\x2b\x89\x86\xaf\xa2\x1c\xf9\xf6\x48\x2d\xb9\x37\xe2\x0a\xac\x2b\xa5\xcb\x19\xd5\x15\xf3\x4c\x2c\x49\x24\xa9\x31\x53\xaf\x5c\x28\x7e\xf8\x22\x5d\x72\x70\x6c\xaf\xc4\x07\xb3\x62\x41\x9d\x1f\xe1\xbe\xf5\x9d\xe8\x36\x54\xa4\x5c\x97\x6b\x5d\x78\x7d\x24\xb2\x01\x01\x30\xb4\x05\x31\xd3\xa0\xa3\x95\xe6\xbd\xb6\x2b\x4d\x42\xba\x42\x1f\x02\xfe\x81\xb3\x22\x25\x25\xcd\x0c\x27\xd5\x47\xf3\xd8\x5c\x36\xa0\x2b\x76\xe1\x47\x03\xc6\x59\x65\x05\x45\x23\x2b\x96\x7c\x6d\xd5\x11\xbf\xa2\xf3\xad\x4a\x78\x83\xb8\x82\x40\x29\x5a\xe8\xfa\xf6\xcf\x28\x7b\xcf\xad\x16\x91\x09\x0f\x5f\xc4\xa0\x6a\x14\xf1\x2b\x8a\xc6\xea\x66\x07\x31\x4f\xc2\x5c\x76\x0b\x05\x14\x1e\x06\xc0\x55\x2d\x0b\xd0\x78\x0d\x53\x7e\x3c\xea\x53\x64\xa9\xf6\x04\x46\x2e\x19\xe0\x0a\x4c\x49\xae\xa7\xde\x7b\x98\x3c\xb1\xb2\x61\x08\x5d\xaa\xd0\xea\xb2\xd8\x29\x15\xbd\x68\x6a\x1d\x70\x58\x5c\xd0\x3c\xe3\x14\x62\x6d\x31\x21\x52\xe2\x3e\xc0\xd2\xbf\x7d\x73\x5f\x41\x62\x16\xdf\xbf\x03\xfb\x38\x68\x20\x58\xa3\x57\xfa\x09\xf3\x0f\x0e\xdb\xda\x89\x0f\x8e\x5f\x49\x1a\x5d\x48\x61\x2c\xf8\xc7\x41\x6b\xd9\x52\xc8\x42\x15\x92\x62\xe0\xfe\x46\x36\x19\x4f\x0d\x67\x2d\x84\xb8\xa7\xca\x7b\xed\x79\xbd\x39\xe9\xc0\x8f\xdf\x53\x1b\xc5\x24\x03\x35\x8b\x2b\xc8\x00\xf1\x30\x9c\xc9\x67\x10\x23\x45\xba\xd8\x0e\xaa\xf9\x82\x0f\x62\x7c\x19\xa1\xa7\x9a\x6e\x10\x98\xdd\x20\x19\x21\x3b\xd8\x9b\x58\x17\x52\x1a\xca\x9a\xa1\xa2\x9c\xac\x82\x59\x25\xe0\x0d\x59\xf5\x4a\x05\x17\x18\xe8\x77\x16\x14\x52\x41\xf5\xda\x0e\xa1\x36\x21\x57\x72\x19\x03\xec\x24\xb3\x05\x70\xa5\x77\x7e\x65\xfd\x08\x62\x24\x46\x25\xf0\x47\x67\xab\x22\xba\x00\xd3\xe5\x89\x5a\xf2\x95\x01\x3d\xf9\x41\x80\x55\x5c\x3d\x05\xa8\x55\x50\x58\xc8\xeb\x2c\xc6\x02\x80\xac\xbe\xfc\x62\x9b\x1f\x09\x1d\x41\x8d\x13\x1e\xa3\xe7\x76\x53\xd2\xa3\x02\x14\x76\xcb\x52\x43\x27\xeb\x4d\xeb\x7e\xb9\x58\x00\xaf\xd4\x2a\x6d\x3a\xec\x7b\xae\x74\x52\x95\x36\x8b\xc5\x1b\x18\x79\x15\xe1\xb8\xe4\x53\xc6\x88\xfb\x58\x68\x95\x67\x24\xa6\xc6\x9f\x73\xce\x66\xc0\x70\xe5\xf9\x73\xb7\x09\x64\x02\xf2\x4f\x04\xba\x29\x63\xf5\xa1\x4f\x9e\xc2\x9a\x5a\x52\x29\x18\x54\x32\x0f\xe2\x5d\x6f\xf2\xd4\x59\xf9\x90\x1f\x9c\x6d\x73\x94\x0f\xb9\xcd\x72\xeb\x64\x41\xed\x10\xe0\x3b\x34\x13\xe0\x97\x3c\x31\x3c\x7a\x3a\x04\xf9\x4f\x2a\xec\x76\xa8\xbb\xf3\x50\x5a\x7b\x28\xad\x8d\x64\x77\x1f\xa5\xc1\x3c\x4f\xb7\xfb\x1c\x1d\xe5\x73\x0e\x10\x84\xfd\x26\xb1\x63\x20\x2b\x69\x8f\x81\x45\x79\xdf\x92\xc7\x37\xec\xfb\xc6\x2e\x3f\x4a\xa9\x3d\x5e\x5f\x90\xdd\x37\xdf\xaf\xb5\x35\x1f\xef\x70\xed\xee\x8d\x6e\xb3\x48\xd1\x0f\x40\x20\x89\x62\x58\x8a\xa7\xfc\x12\xa4\x11\x80\x93\x79\x65\x20\x99\xe3\x67\xf3\x80\xb2\x24\xf0\x48\x06\x81\x92\xc7\x4a\x32\x2c\x0e\x2a\xb7\x84\x38\x82\x97\x3f\x8d\x15\xe7\xc2\x87\x8b\x1f\x08\x3d\x85\x7b\x1d\x86\x0c\xc0\x8c\x60\x43\xf4\x60\x92\xc7\xe0\x13\xab\xcb\x55\x0c\x43\x83\x0c\x40\x31\x0e\xc7\xc0\x66\x87\xc0\x64\x34\xed\xc1\xc0\xb5\x56\x3a\x28\x49\xf2\x8e\x5f\x5f\x65\x3c\xb2\x78\x09\x2b\xd5\x0f\xd4\x93\x79\xc9\xc6\x11\xe4\xe5\x84\x28\x4d\xe8\x12\x12\x33\x22\x1d\x20\xba\x59\x80\xb5\x97\x46\x98\xe7\xed\xa9\xcd\xc5\xbd\x4a\x71\xba\x18\x6c\x57\x5d\x09\xb8\xa1\xae\x02\xdb\xae\xca\x72\xd8\x6e\xa8\xae\x12\x47\x9f\xc2\x1c\x66\xac\x86\x72\x09\x17\x17\x7e\x05\x45\x85\x31\x2e\x25\xfc\xbf\x28\xaa\x08\x89\x95\xa6\x54\x6e\xe7\x38\xda\xae\x2a\x80\xac\x1d\xec\x21\x38\xb1\xd7\x19\xde\x0a\xf3\x64\x86\x97\x85\x0d\xbe\xaa\x00\x5e\x71\x26\x56\xe3\x4e\xde\x9a\x26\x17\xfe\xe7\xf3\xbe\xff\xcb\x97\xbf\xfc\x10\xee\x6c\x72\xd5\x29\x37\xb4\xba\x1a\x4d\x6f\xa4\x20\x05\xe7\xe4\x09\xe4\x5a\x48\xf5\x50\xd7\x98\xa7\xc4\x2a\x02\xe5\x8d\xb2\x9c\x7c\xcd\x69\x6a\xc5\x7f\xa1\x68\x25\x15\xb2\x3f\xad\x4d\x6e\xd1\x24\xa6\xd7\x4a\x8b\x97\xee\xfb\x2e\x35\x88\x27\xdc\x50\x7b\x05\x8a\x3f\xaa\xb9\x84\x5e\x11\xc4\x70\x57\xea\xea\x59\x98\xe5\xd6\x42\xd6\x29\x45\x3b\xb3\x29\x81\xff\x7c\x93\xb8\x1f\x99\x16\x09\xd5\xd7\xee\x7b\x26\x15\xd6\xe8\x85\xd2\x8a\xd2\xdc\x09\x9f\x09\x83\x25\x1f\xab\xe5\x50\x4b\xf1\x25\x63\x93\xb0\x38\x61\x17\x8a\x77\x28\x58\xba\xaf\x29\x21\x9a\xc8\xe6\xd5\xe5\x0c\x82\x97\xbb\xe6\x0e\x5d\x5b\xc0\x90\x2d\xbf\xb5\x8b\x0b\x1e\xc9\x1f\xf8\xce\x52\xd4\xfd\xae\xe0\x2f\xda\x71\x97\x7c\x4f\x4a\x82\x2e\x88\xa5\xa4\x21\x31\xd7\x55\xef\xb5\x6b\xa7\xe3\x81\x5c\xf0\xeb\xc1\x0b\x8f\x03\x42\xeb\xd8\xde\x45\x78\x90\xc6\x04\x63\x98\xa3\x87\x40\x3e\x66\x4a\xc9\x21\x80\x53\xa8\xd8\xe5\x10\x7f\xd8\xf5\x43\xef\x9d\x1e\x92\x3b\xbc\x67\xe9\xfa\x9e\xe5\x8c\x75\x87\x2b\x16\xc6\x81\x22\x7a\x0d\x5c\x2d\x20\xdf\x5f\x7b\x84\x6a\x41\xfd\x58\x30\xb0\x41\xb0\x4b\x9d\x73\xd7\x08\xc6\xd0\xd4\x17\x66\x1a\x39\x41\xa4\x73\x85\xed\x34\x1d\x80\xd9\xf4\xdf\x91\x3a\x77\xa0\x0d\xed\xb8\x25\x41\x1b\xe0\x7a\x6b\x6f\x67\x70\xf3\x88\x76\xcf\xe0\xfe\x2d\xb7\xd1\xf6\xde\x95\xad\x78\xcf\xbd\xd1\x22\xad\x37\x1d\x76\xde\x23\x8b\x70\xe3\xa4\x7e\xc7\x4d\x23\x67\x62\x4d\xab\x64\x68\x95\x3a\x60\xdc\x40\x8c\x6d\xf6\xeb\x3b\x78\x3a\xc6\x30\xb4\xd5\x0e\x41\xaa\x4b\x8d\x84\x8a\x45\x6c\x87\x0c\x12\x42\xd7\x70\xea\xbb\xc1\x6a\x21\x62\x47\xe3\xb7\x3d\x46\xd3\x05\xd7\x7b\x47\xe4\x31\x0b\x54\x2a\x45\xca\x9f\x91\x3d\x54\x0c\x4c\x55\x33\xdf\xd1\x2a\xd8\x68\x93\xbc\x95\x43\xc6\x76\x2a\x6f\x7a\xce\xa8\x26\xe7\x1f\x3c\x83\x16\x01\xfa\xf6\xb1\x77\xf6\x60\xba\xf1\x3b\x03\x5c\xd5\x75\x2c\x30\x98\x11\xbc\x21\x1b\x8d\x19\x03\xd7\xe9\xf2\xdc\x01\x8f\x6e\xf0\x40\x2a\x26\xc8\xdd\x71\x91\xb9\xb4\x35\xc8\x86\xba\xf0\x8d\x58\xa4\xf7\xc5\xca\x70\x10\xfb\xb5\x0e\x21\x45\x28\x7b\xf6\x70\x6d\xf0\x9d\xdb\x61\xf7\x95\x61\x77\xbb\x75\x75\x75\x01\x5c\xae\x08\xfe\xce\xaf\xab\x4b\xd6\x27\x48\xbc\x3d\x97\xac\x55\x47\x6d\xbd\x6d\x53\x15\x86\x9d\xa7\xde\x23\x13\x05\xe5\x5b\xb9\x58\x23\xde\xf0\x94\xbd\x94\xd2\x95\x8f\x43\x2d\x43\x77\x82\x43\xda\x43\xd5\xda\x75\x72\x75\x7b\x70\x34\x6d\xbf\x50\xb6\xae\x92\xed\xed\x7d\x97\xc9\x26\xf1\xcf\xdc\xe8\x8d\xd0\xc6\x96\x63\xa5\xf1\x3d\x89\x11\x06\x9f\x94\xbc\xa5\x26\x76\x25\x74\xff\xb5\xb2\xf7\x4a\x79\x8f\x2a\x3c\x75\x79\xb2\x52\x62\x35\xda\xae\xc6\x12\xf2\x81\xa9\xff\x58\x25\xe0\x8a\x81\xc6\xc4\x76\x1e\x6a\xe0\x07\x66\x63\xad\x7b\x7b\x36\xb6\x7b\x7b\xb6\x73\xf7\xf6\x1e\x59\x2a\xef\x7d\x15\x53\xab\xe1\x0e\x61\xae\x46\xb1\xf1\xeb\x84\x72\xe5\x3e\x79\x2c\x1a\x30\x50\x8e\x45\x17\x33\x75\xe5\x75\x5a\x63\x51\xb6\x94\x96\xb8\x56\xc3\xac\xf1\xfb\x27\x23\xfb\xb4\xac\x53\xca\x10\xb0\x5e\xb5\x8c\x24\xbc\x27\x23\xdf\x79\xef\xab\x0e\xdc\xa3\xbb\x5f\xb7\xff\x0b\xfa\x76\xdf\x6b\xfd\x5d\x4e\x3d\x68\x3c\xc1\x59\xbd\xca\xc1\xbe\x50\xb8\x7a\x85\xe3\xba\x41\xd5\xf4\xab\xea\x11\x1d\x64\x15\xcd\xc9\xdf\xe8\x92\x7e\x74\x0f\xc2\x1c\xb2\xe9\xce\xff\x34\x9e\xbf\x91\x53\x74\x34\x46\xa8\xc5\x17\x80\x04\xf2\x18\xbe\x9f\xc3\xcf\xea\x19\x19\x31\xca\x8d\x33\xba\xe0\x86\x48\x45\x19\x99\x53\x48\x6c\xab\x77\x64\x5d\xcf\xdb\xe8\x39\xbd\x0a\x16\x4a\x2d\x24\xa7\x99\x30\xee\x8d\x1b\xce\x85\x52\xcc\x4c\x78\x8e\xcf\xf0\xae\xc3\x83\xe0\x00\xfe\x94\xa3\xed\x4f\xe7\xc6\x3f\x3c\x3c\x6f\xbf\x79\x5c\xc7\xdb\x47\x74\x04\xee\x10\x40\x05\x8d\xbf\x52\x3a\x37\x81\xd2\x0b\x20\xf1\x30\x38\xd8\x0f\xcb\xc9\xf1\xcf\xfb\xb6\xa2\x82\x52\xd9\xa8\x5c\x47\x7c\x0c\xdf\xc0\x27\x20\x89\xa4\xca\xd9\x1c\xf6\xf2\x96\x38\x2b\x94\xb9\xf0\x6b\x49\xec\xa3\x70\xf7\xc3\xe6\x9c\x6f\x33\x69\xb6\xc8\xc2\xbd\xba\xec\x23\xa7\x70\x3f\xbc\x00\x85\xe0\x7b\x96\x27\x10\xa5\x2d\x44\x08\x01\xfe\x97\x67\xd8\x5a\x75\x71\xe4\xbd\x62\x54\x06\xf8\x28\xb2\xe3\xc1\x60\x82\x8b\xed\x17\x81\x93\xf8\xf9\xfa\xba\x7b\x33\xeb\x1d\xff\xee\x90\x12\xe7\xdb\x47\xe4\xdb\x37\xf7\x51\x75\xb4\xe2\xe7\x6b\xce\xe4\x3e\x1b\x6d\xe4\xf9\x0d\x3a\xc8\x1b\xad\xe2\x4d\x0e\x30\x1e\x34\x9f\x16\x36\x00\xea\x33\x5a\xef\x0a\xe9\x8c\x4b\xa4\x60\xea\x61\x16\xf3\x8e\x4f\x8b\x5c\x36\x09\xdd\xca\x1a\x6c\x3b\x9d\x16\x9c\xe3\x86\x2a\x3c\x3b\x14\x63\xea\xb3\xb2\x76\x1d\x53\x1e\xac\x97\xd2\x88\xd4\x95\xbe\x7d\x55\x74\xab\x76\x6e\xc0\x0f\xff\xda\x76\xe8\xd7\xb5\xad\x52\xb8\x3d\xdc\x4d\xcc\xd8\xd2\xf0\xea\xce\xf3\x58\x31\xe3\x86\x4a\xcc\x0e\xc5\x08\x31\x1f\x1c\xfe\x14\xec\xc3\xbf\x07\x47\x87\xfb\xfb\x2f\x06\x9f\x40\x74\xd4\x2c\x1d\x82\xc7\x83\x77\x11\x7c\x01\xdf\x23\xf8\x23\xb2\x17\x2b\x63\x8f\xf0\x81\xf4\xde\x6e\x42\xef\x7d\x70\x5b\xf8\xc1\x1c\xa2\xcb\xfa\xdb\xde\x8e\xa4\x8e\x29\x9c\xf1\x39\xcd\xa5\xf5\x1a\xdd\x86\x88\xa6\x11\x97\x4f\x9e\x7a\xc7\x27\x52\x19\xbe\x99\xab\x7b\x0a\x84\xb2\x32\x68\x55\x00\xf3\xb5\xe4\xdf\x38\x46\x5d\xe0\x11\x45\x2c\x69\x9f\xb1\x96\x94\xab\xe4\x5d\xc7\x3e\x00\x77\x79\x7f\x12\x16\xff\xaf\xc4\xff\x02\x00\x00\xff\xff\x6f\x8f\xdb\x3f\x3c\x31\x00\x00")

func admin_http_assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_http_assetsIndexHtml,
		"admin_http_assets/index.html",
	)
}

func admin_http_assetsIndexHtml() (*asset, error) {
	bytes, err := admin_http_assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_http_assets/index.html", size: 12604, mode: os.FileMode(420), modTime: time.Unix(1462546397, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"admin_http_assets/app.css": admin_http_assetsAppCss,
	"admin_http_assets/app.js": admin_http_assetsAppJs,
	"admin_http_assets/index.html": admin_http_assetsIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"admin_http_assets": &bintree{nil, map[string]*bintree{
		"app.css": &bintree{admin_http_assetsAppCss, map[string]*bintree{}},
		"app.js": &bintree{admin_http_assetsAppJs, map[string]*bintree{}},
		"index.html": &bintree{admin_http_assetsIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

